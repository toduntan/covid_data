-- TEMPLATE
!set variable_substitution=true
!set header=false
!set output_format=plain
!set timing=false
!set wrap=false

!print 'CREATING GRANTS FOR DATABASE: &{DATABASE}...';

USE ROLE SECURITYADMIN;
DROP ROLE IF EXISTS &{DATABASE}_READ;
DROP ROLE IF EXISTS &{DATABASE}_WRITE;
DROP ROLE IF EXISTS &{DATABASE}_DDL;

--READ
CREATE ROLE IF NOT EXISTS &{DATABASE}_READ;
GRANT USAGE ON DATABASE &{DATABASE} TO &{DATABASE}_READ;
GRANT USAGE,MONITOR ON SCHEMA &{DATABASE}.PUBLIC to &{DATABASE}_READ;
GRANT SELECT ON ALL VIEWS IN SCHEMA &{DATABASE}.PUBLIC to &{DATABASE}_READ;
GRANT SELECT ON ALL TABLES IN SCHEMA &{DATABASE}.PUBLIC TO &{DATABASE}_READ;
    --FUTURE
GRANT SELECT ON FUTURE TABLES IN DATABASE &{DATABASE} TO &{DATABASE}_READ;
GRANT SELECT ON FUTURE VIEWS IN DATABASE &{DATABASE} TO &{DATABASE}_READ;
GRANT USAGE,MONITOR ON FUTURE SCHEMAS IN DATABASE &{DATABASE} TO &{DATABASE}_READ;
GRANT READ ON FUTURE STAGES IN DATABASE &{DATABASE} TO &{DATABASE}_READ;
GRANT USAGE, MONITOR ON WAREHOUSE &{WAREHOUSE} TO &{DATABASE}_READ;
GRANT USAGE, MONITOR ON WAREHOUSE &{WAREHOUSE} TO &{DATABASE}_READ;


--WRITE
CREATE ROLE &{DATABASE}_WRITE;
GRANT ROLE &{DATABASE}_READ TO ROLE &{DATABASE}_WRITE;
GRANT INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN SCHEMA &{DATABASE}.PUBLIC TO &{DATABASE}_WRITE;
    --FUTURE
GRANT INSERT, UPDATE, DELETE, TRUNCATE ON FUTURE TABLES IN DATABASE &{DATABASE} TO ROLE &{DATABASE}_WRITE;
GRANT USAGE ON FUTURE FILE FORMATS IN DATABASE &{DATABASE} TO ROLE &{DATABASE}_WRITE;
GRANT READ, WRITE ON FUTURE STAGES IN DATABASE &{DATABASE} TO ROLE &{DATABASE}_WRITE;


--DDL
CREATE ROLE &{DATABASE}_DDL;
GRANT ROLE &{DATABASE}_WRITE TO ROLE &{DATABASE}_DDL;
GRANT ALL PRIVILEGES ON ALL SCHEMAS IN DATABASE &{DATABASE} TO ROLE &{DATABASE}_DDL; 
GRANT ALL PRIVILEGES ON FUTURE SCHEMAS IN DATABASE &{DATABASE} TO ROLE &{DATABASE}_DDL; 

--COMPLETE HIERARCHY
GRANT ROLE &{DATABASE}_DDL TO ROLE SYSADMIN;


!set quiet=true
use role SYSADMIN;
use &{DATABASE};
use warehouse &{WAREHOUSE};

!spool &{database}_tmp.sql

SELECT 'GRANT USAGE,MONITOR ON SCHEMA &{DATABASE}.' || SCHEMA_NAME || ' TO &{DATABASE}_READ;' FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME NOT IN ('PUBLIC', 'INFORMATION_SCHEMA');
SELECT 'GRANT SELECT ON ALL VIEWS IN SCHEMA &{DATABASE}.' || SCHEMA_NAME || ' TO &{DATABASE}_READ;' FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME NOT IN ('PUBLIC', 'INFORMATION_SCHEMA');
SELECT 'GRANT SELECT ON ALL TABLES IN SCHEMA &{DATABASE}.' || SCHEMA_NAME || ' TO &{DATABASE}_READ;' FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME NOT IN ('PUBLIC', 'INFORMATION_SCHEMA');
SELECT 'GRANT READ ON ALL STAGES IN SCHEMA &{DATABASE}.' || SCHEMA_NAME || ' TO &{DATABASE}_READ;' FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME NOT IN ('PUBLIC', 'INFORMATION_SCHEMA');

SELECT 'GRANT INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN SCHEMA &{DATABASE}.' || SCHEMA_NAME || ' TO &{DATABASE}_WRITE;' FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME NOT IN ('PUBLIC', 'INFORMATION_SCHEMA');
SELECT 'GRANT USAGE ON ALL FILE FORMATS IN SCHEMA &{DATABASE}.' || SCHEMA_NAME || ' TO ROLE &{DATABASE}_WRITE;' FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME NOT IN ('PUBLIC', 'INFORMATION_SCHEMA');
SELECT 'GRANT READ, WRITE ON ALL STAGES IN SCHEMA &{DATABASE}.' || SCHEMA_NAME || ' TO ROLE &{DATABASE}_WRITE;' FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME NOT IN ('PUBLIC', 'INFORMATION_SCHEMA');

!spool off
!set quiet=false

use role SECURITYADMIN;
!load &{database}_tmp.sql
!system del &{database}_tmp.sql